# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ventanaListadoReservas.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QStyledItemDelegate
from PyQt5.QtSql import QSqlDatabase, QSqlQueryModel
from PyQt5.QtGui import QStandardItemModel, QStandardItem
from PyQt5.QtCore import Qt
import mysql.connector

class CenterDelegate(QStyledItemDelegate):
    def initStyleOption(self, option, index):
        super().initStyleOption(option, index)
        option.displayAlignment = Qt.AlignCenter


class HistorialReservas(object):

    selected_index = 0
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Historial Reservas")
        MainWindow.resize(884, 450)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textPrecioMedio = QtWidgets.QLineEdit(self.centralwidget)
        self.textPrecioMedio.setGeometry(QtCore.QRect(340, 30, 116, 22))
        self.textPrecioMedio.setObjectName("textPrecioMedio")
        self.textDiasMedia = QtWidgets.QLineEdit(self.centralwidget)
        self.textDiasMedia.setGeometry(QtCore.QRect(500, 30, 116, 22))
        self.textDiasMedia.setObjectName("textDiasMedia")
        self.textTotalMes = QtWidgets.QLineEdit(self.centralwidget)
        self.textTotalMes.setGeometry(QtCore.QRect(670, 30, 116, 22))
        self.textTotalMes.setObjectName("textTotalMes")
        self.textNumAlquileres = QtWidgets.QLineEdit(self.centralwidget)
        self.textNumAlquileres.setGeometry(QtCore.QRect(170, 30, 116, 22))
        self.textNumAlquileres.setObjectName("textNumAlquileres")
        self.btnMostrarDatos = QtWidgets.QPushButton(self.centralwidget)
        self.btnMostrarDatos.setGeometry(QtCore.QRect(170, 350, 93, 28))
        self.btnMostrarDatos.setObjectName("btnMostrarDatos")
        self.btnAtras = QtWidgets.QPushButton(self.centralwidget)
        self.btnAtras.setGeometry(QtCore.QRect(600, 350, 93, 28))
        self.btnAtras.setObjectName("btnAtras")
        self.comboBoxMesesAnho = QtWidgets.QComboBox(self.centralwidget)
        self.comboBoxMesesAnho.setGeometry(QtCore.QRect(20, 30, 106, 20))
        self.comboBoxMesesAnho.setObjectName("comboBox")
        self.labelNumAlquileres = QtWidgets.QLabel(self.centralwidget)
        self.labelNumAlquileres.setGeometry(QtCore.QRect(174, 0, 111, 20))
        self.labelNumAlquileres.setObjectName("labelNumAlquileres")
        self.labelPrecioMedio = QtWidgets.QLabel(self.centralwidget)
        self.labelPrecioMedio.setGeometry(QtCore.QRect(360, 0, 81, 20))
        self.labelPrecioMedio.setObjectName("labelPrecioMedio")
        self.labelDiasMedia = QtWidgets.QLabel(self.centralwidget)
        self.labelDiasMedia.setGeometry(QtCore.QRect(520, 0, 81, 20))
        self.labelDiasMedia.setObjectName("labelDiasMedia")
        self.labelTotalMes = QtWidgets.QLabel(self.centralwidget)
        self.labelTotalMes.setGeometry(QtCore.QRect(700, 0, 55, 16))
        self.labelTotalMes.setObjectName("labelTotalMes")
        self.tableView = QtWidgets.QTableView(self.centralwidget)
        self.tableView.setGeometry(QtCore.QRect(120, 90, 650, 221))
        self.tableView.setObjectName("tableView")


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 884, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        mesesAnho = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"]

        #Rellenamos comboBox con los meses del año
        for m in mesesAnho:
            self.comboBoxMesesAnho.addItem(m)

        global selected_index
        selected_index = self.comboBoxMesesAnho.currentIndex()

        #Añadimos funciones a botones ok y cancel
        self.comboBoxMesesAnho.currentIndexChanged.connect(lambda index: self.Cargar_Datos_Tabla(index))
        self.btnMostrarDatos.clicked.connect(self.mostrarDatos)
        self.btnAtras.clicked.connect(lambda: self.ejecutarFunciones(MainWindow))


    def ejecutarFunciones(self, MainWindow):
        self.mostrarListadoReservas()
        MainWindow.close()

    def establecerConexionBD(self):
        conexion = mysql.connector.connect(
            host='localhost',
            port=3306,
            user='root',
            password='castelao',
            db='UD02BDReservaCoches')
        
        return conexion
    

    def Cargar_Datos_Tabla(self, index):    
        modelo = QStandardItemModel(MainWindow)
        self.tableView.setModel(modelo)

        # Establecer el delegate para centrar todos los datos en la tabla
        delegate = CenterDelegate()
        self.tableView.setItemDelegate(delegate)


        nombreColumnas = ["Cliente", "Vehículo", "Precio", "Días", "Total"]  # Nombres de las columnas
        modelo.setHorizontalHeaderLabels(nombreColumnas)

        anchoTabla = self.tableView.viewport().width()
        numeroColumnas = 5
        anchoColumna = anchoTabla / numeroColumnas

        for col in range(numeroColumnas):
            self.tableView.setColumnWidth(col, anchoColumna)  

        index+=1

        if(index<10):
            month = "0"+str(index)
        else:
            month = str(index)
        
        #final_selected_index_int = int(final_selected_index)
        #month = final_selected_index_int + 1
        print("MES: "+month)
        conexion = self.establecerConexionBD()
        if not conexion:
            return
        
        query = ("select clNombre, inMatricula, coPrecio, DateDiff(reFecFinal, reFecInicio), coPrecio*DateDiff(reFecFinal, reFecInicio)"
                +" from Involucra join Clientes on inCliente = clNif"
                +" join Reservas on inReserva = reCodigo"
                +" join Coches on inMatricula = coMatricula"
                +" where month(reFecInicio) = "+ month)
        cur=conexion.cursor()
        cur.execute(query)

        row = 0
        for data_row in cur.fetchall():
            for col, value in enumerate(data_row):
                item = QStandardItem(str(value))
                self.tableView.model().setItem(row, col, item)
            row += 1

        cur.close()
        conexion.close()
        

    def mostrarListadoReservas(self):
        from ventanaListadoReservas import ListadoReservas
        self.ventanaListadoReservas = QtWidgets.QMainWindow()
        self.listaReservas = ListadoReservas()
        self.listaReservas.setupUi(self.ventanaListadoReservas)
        self.ventanaListadoReservas.show()


    def mostrarDatos(self):
        self.textNumAlquileres.setText("7")
        self.textTotalMes.setText("1000")
        self.textDiasMedia.setText("5")
        self.textPrecioMedio.setText("200")


    def borrarDatos(self):
        self.textNumAlquileres.clear()
        self.textTotalMes.clear()
        self.textDiasMedia.clear()
        self.textPrecioMedio.clear()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Historial Reservas"))
        self.btnMostrarDatos.setText(_translate("MainWindow", "Mostrar Datos"))
        self.btnAtras.setText(_translate("MainWindow", "Atrás"))
        self.labelNumAlquileres.setText(_translate("MainWindow", "Numero Alquileres"))
        self.labelPrecioMedio.setText(_translate("MainWindow", "Precio Medio"))
        self.labelDiasMedia.setText(_translate("MainWindow", "Media días"))
        self.labelTotalMes.setText(_translate("MainWindow", "Total Mes"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = HistorialReservas()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
